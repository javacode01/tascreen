<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yawei.client.gsyw.ZtdjJbxxZsMapper" >
  <resultMap id="BaseResultMap" type="com.yawei.model.gsyw.ZtdjJbxxZs" >
    <result column="PRIPID" property="pripid" jdbcType="VARCHAR" />
    <result column="REGNO" property="regno" jdbcType="VARCHAR" />
    <result column="UNISCID" property="uniscid" jdbcType="VARCHAR" />
    <result column="ENTNAME" property="entname" jdbcType="VARCHAR" />
    <result column="LEREP" property="lerep" jdbcType="VARCHAR" />
    <result column="ENTCAT" property="entcat" jdbcType="VARCHAR" />
    <result column="REGORG" property="regorg" jdbcType="VARCHAR" />
    <result column="LOCALADM" property="localadm" jdbcType="VARCHAR" />
    <result column="LOCALORG" property="localorg" jdbcType="VARCHAR" />
    <result column="ENTTYPE" property="enttype" jdbcType="VARCHAR" />
    <result column="INDUSTRYPHY" property="industryphy" jdbcType="VARCHAR" />
    <result column="INDUSTRYCO" property="industryco" jdbcType="VARCHAR" />
    <result column="ESTDATE" property="estdate" jdbcType="TIMESTAMP" />
    <result column="ENTSTATUS" property="entstatus" jdbcType="DECIMAL" />
    <result column="REGCAP" property="regcap" jdbcType="DECIMAL" />
    <result column="S_EXT_TIMESTAMP" property="sExtTimestamp" jdbcType="TIMESTAMP" />
    <result column="ENTID" property="entid" jdbcType="VARCHAR" />
    <result column="APPRDATE" property="apprdate" jdbcType="TIMESTAMP" />
    <result column="OPFROM" property="opfrom" jdbcType="TIMESTAMP" />
    <result column="OPTO" property="opto" jdbcType="TIMESTAMP" />
    <result column="TEL" property="tel" jdbcType="VARCHAR" />
    <result column="POSTALCODE" property="postalcode" jdbcType="VARCHAR" />
    <result column="APPRNO" property="apprno" jdbcType="VARCHAR" />
    <result column="EMPNUM" property="empnum" jdbcType="DECIMAL" />
    <result column="ENTCAT_NAME" property="entcatName" jdbcType="VARCHAR" />
    <result column="ENTSTATUS_NAME" property="entstatusName" jdbcType="VARCHAR" />
    <result column="REGORG_NAME" property="regorgName" jdbcType="VARCHAR" />
    <result column="LOCALORG_NAME" property="localorgName" jdbcType="VARCHAR" />
    <result column="LOCALADM_NAME" property="localadmName" jdbcType="VARCHAR" />
    <result column="ENTTYPE_NAME" property="enttypeName" jdbcType="VARCHAR" />
    <result column="INDUSTRYPHY_NAME" property="industryphyName" jdbcType="VARCHAR" />
    <result column="INDUSTRYCO_NAME" property="industrycoName" jdbcType="VARCHAR" />
    <result column="INDUSTRYTYPE" property="industrytype" jdbcType="VARCHAR" />
    <result column="CANDATE" property="candate" jdbcType="TIMESTAMP" />
    <result column="REVDATE" property="revdate" jdbcType="TIMESTAMP" />
    <result column="REGCAPUSD" property="regcapusd" jdbcType="DECIMAL" />
    <result column="DOM" property="dom" jdbcType="VARCHAR" />
    <result column="OPLOC" property="oploc" jdbcType="VARCHAR" />
    <result column="CERNO" property="cerno" jdbcType="VARCHAR" />
    <result column="QYLXDL" property="qylxdl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PRIPID, REGNO, UNISCID, ENTNAME, LEREP, ENTCAT, REGORG, LOCALADM, LOCALORG, ENTTYPE, 
    INDUSTRYPHY, INDUSTRYCO, ESTDATE, ENTSTATUS, REGCAP, S_EXT_TIMESTAMP, ENTID, APPRDATE, 
    OPFROM, OPTO, TEL, POSTALCODE, APPRNO, EMPNUM, ENTCAT_NAME, ENTSTATUS_NAME, REGORG_NAME, 
    LOCALORG_NAME, LOCALADM_NAME, ENTTYPE_NAME, INDUSTRYPHY_NAME, INDUSTRYCO_NAME, INDUSTRYTYPE, 
    CANDATE, REVDATE, REGCAPUSD, DOM, OPLOC, CERNO, QYLXDL
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yawei.model.gsyw.ZtdjJbxxZsExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TAGSYW.ZTDJ_JBXX_ZS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.yawei.model.gsyw.ZtdjJbxxZsExample" >
    delete from TAGSYW.ZTDJ_JBXX_ZS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yawei.model.gsyw.ZtdjJbxxZs" >
    insert into TAGSYW.ZTDJ_JBXX_ZS (PRIPID, REGNO, UNISCID, 
      ENTNAME, LEREP, ENTCAT, 
      REGORG, LOCALADM, LOCALORG, 
      ENTTYPE, INDUSTRYPHY, INDUSTRYCO, 
      ESTDATE, ENTSTATUS, REGCAP, 
      S_EXT_TIMESTAMP, ENTID, APPRDATE, 
      OPFROM, OPTO, TEL, 
      POSTALCODE, APPRNO, EMPNUM, 
      ENTCAT_NAME, ENTSTATUS_NAME, REGORG_NAME, 
      LOCALORG_NAME, LOCALADM_NAME, ENTTYPE_NAME, 
      INDUSTRYPHY_NAME, INDUSTRYCO_NAME, INDUSTRYTYPE, 
      CANDATE, REVDATE, REGCAPUSD, 
      DOM, OPLOC, CERNO, 
      QYLXDL)
    values (#{pripid,jdbcType=VARCHAR}, #{regno,jdbcType=VARCHAR}, #{uniscid,jdbcType=VARCHAR}, 
      #{entname,jdbcType=VARCHAR}, #{lerep,jdbcType=VARCHAR}, #{entcat,jdbcType=VARCHAR}, 
      #{regorg,jdbcType=VARCHAR}, #{localadm,jdbcType=VARCHAR}, #{localorg,jdbcType=VARCHAR}, 
      #{enttype,jdbcType=VARCHAR}, #{industryphy,jdbcType=VARCHAR}, #{industryco,jdbcType=VARCHAR}, 
      #{estdate,jdbcType=TIMESTAMP}, #{entstatus,jdbcType=DECIMAL}, #{regcap,jdbcType=DECIMAL}, 
      #{sExtTimestamp,jdbcType=TIMESTAMP}, #{entid,jdbcType=VARCHAR}, #{apprdate,jdbcType=TIMESTAMP}, 
      #{opfrom,jdbcType=TIMESTAMP}, #{opto,jdbcType=TIMESTAMP}, #{tel,jdbcType=VARCHAR}, 
      #{postalcode,jdbcType=VARCHAR}, #{apprno,jdbcType=VARCHAR}, #{empnum,jdbcType=DECIMAL}, 
      #{entcatName,jdbcType=VARCHAR}, #{entstatusName,jdbcType=VARCHAR}, #{regorgName,jdbcType=VARCHAR}, 
      #{localorgName,jdbcType=VARCHAR}, #{localadmName,jdbcType=VARCHAR}, #{enttypeName,jdbcType=VARCHAR}, 
      #{industryphyName,jdbcType=VARCHAR}, #{industrycoName,jdbcType=VARCHAR}, #{industrytype,jdbcType=VARCHAR}, 
      #{candate,jdbcType=TIMESTAMP}, #{revdate,jdbcType=TIMESTAMP}, #{regcapusd,jdbcType=DECIMAL}, 
      #{dom,jdbcType=VARCHAR}, #{oploc,jdbcType=VARCHAR}, #{cerno,jdbcType=VARCHAR}, 
      #{qylxdl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yawei.model.gsyw.ZtdjJbxxZs" >
    insert into TAGSYW.ZTDJ_JBXX_ZS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pripid != null" >
        PRIPID,
      </if>
      <if test="regno != null" >
        REGNO,
      </if>
      <if test="uniscid != null" >
        UNISCID,
      </if>
      <if test="entname != null" >
        ENTNAME,
      </if>
      <if test="lerep != null" >
        LEREP,
      </if>
      <if test="entcat != null" >
        ENTCAT,
      </if>
      <if test="regorg != null" >
        REGORG,
      </if>
      <if test="localadm != null" >
        LOCALADM,
      </if>
      <if test="localorg != null" >
        LOCALORG,
      </if>
      <if test="enttype != null" >
        ENTTYPE,
      </if>
      <if test="industryphy != null" >
        INDUSTRYPHY,
      </if>
      <if test="industryco != null" >
        INDUSTRYCO,
      </if>
      <if test="estdate != null" >
        ESTDATE,
      </if>
      <if test="entstatus != null" >
        ENTSTATUS,
      </if>
      <if test="regcap != null" >
        REGCAP,
      </if>
      <if test="sExtTimestamp != null" >
        S_EXT_TIMESTAMP,
      </if>
      <if test="entid != null" >
        ENTID,
      </if>
      <if test="apprdate != null" >
        APPRDATE,
      </if>
      <if test="opfrom != null" >
        OPFROM,
      </if>
      <if test="opto != null" >
        OPTO,
      </if>
      <if test="tel != null" >
        TEL,
      </if>
      <if test="postalcode != null" >
        POSTALCODE,
      </if>
      <if test="apprno != null" >
        APPRNO,
      </if>
      <if test="empnum != null" >
        EMPNUM,
      </if>
      <if test="entcatName != null" >
        ENTCAT_NAME,
      </if>
      <if test="entstatusName != null" >
        ENTSTATUS_NAME,
      </if>
      <if test="regorgName != null" >
        REGORG_NAME,
      </if>
      <if test="localorgName != null" >
        LOCALORG_NAME,
      </if>
      <if test="localadmName != null" >
        LOCALADM_NAME,
      </if>
      <if test="enttypeName != null" >
        ENTTYPE_NAME,
      </if>
      <if test="industryphyName != null" >
        INDUSTRYPHY_NAME,
      </if>
      <if test="industrycoName != null" >
        INDUSTRYCO_NAME,
      </if>
      <if test="industrytype != null" >
        INDUSTRYTYPE,
      </if>
      <if test="candate != null" >
        CANDATE,
      </if>
      <if test="revdate != null" >
        REVDATE,
      </if>
      <if test="regcapusd != null" >
        REGCAPUSD,
      </if>
      <if test="dom != null" >
        DOM,
      </if>
      <if test="oploc != null" >
        OPLOC,
      </if>
      <if test="cerno != null" >
        CERNO,
      </if>
      <if test="qylxdl != null" >
        QYLXDL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pripid != null" >
        #{pripid,jdbcType=VARCHAR},
      </if>
      <if test="regno != null" >
        #{regno,jdbcType=VARCHAR},
      </if>
      <if test="uniscid != null" >
        #{uniscid,jdbcType=VARCHAR},
      </if>
      <if test="entname != null" >
        #{entname,jdbcType=VARCHAR},
      </if>
      <if test="lerep != null" >
        #{lerep,jdbcType=VARCHAR},
      </if>
      <if test="entcat != null" >
        #{entcat,jdbcType=VARCHAR},
      </if>
      <if test="regorg != null" >
        #{regorg,jdbcType=VARCHAR},
      </if>
      <if test="localadm != null" >
        #{localadm,jdbcType=VARCHAR},
      </if>
      <if test="localorg != null" >
        #{localorg,jdbcType=VARCHAR},
      </if>
      <if test="enttype != null" >
        #{enttype,jdbcType=VARCHAR},
      </if>
      <if test="industryphy != null" >
        #{industryphy,jdbcType=VARCHAR},
      </if>
      <if test="industryco != null" >
        #{industryco,jdbcType=VARCHAR},
      </if>
      <if test="estdate != null" >
        #{estdate,jdbcType=TIMESTAMP},
      </if>
      <if test="entstatus != null" >
        #{entstatus,jdbcType=DECIMAL},
      </if>
      <if test="regcap != null" >
        #{regcap,jdbcType=DECIMAL},
      </if>
      <if test="sExtTimestamp != null" >
        #{sExtTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="entid != null" >
        #{entid,jdbcType=VARCHAR},
      </if>
      <if test="apprdate != null" >
        #{apprdate,jdbcType=TIMESTAMP},
      </if>
      <if test="opfrom != null" >
        #{opfrom,jdbcType=TIMESTAMP},
      </if>
      <if test="opto != null" >
        #{opto,jdbcType=TIMESTAMP},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="apprno != null" >
        #{apprno,jdbcType=VARCHAR},
      </if>
      <if test="empnum != null" >
        #{empnum,jdbcType=DECIMAL},
      </if>
      <if test="entcatName != null" >
        #{entcatName,jdbcType=VARCHAR},
      </if>
      <if test="entstatusName != null" >
        #{entstatusName,jdbcType=VARCHAR},
      </if>
      <if test="regorgName != null" >
        #{regorgName,jdbcType=VARCHAR},
      </if>
      <if test="localorgName != null" >
        #{localorgName,jdbcType=VARCHAR},
      </if>
      <if test="localadmName != null" >
        #{localadmName,jdbcType=VARCHAR},
      </if>
      <if test="enttypeName != null" >
        #{enttypeName,jdbcType=VARCHAR},
      </if>
      <if test="industryphyName != null" >
        #{industryphyName,jdbcType=VARCHAR},
      </if>
      <if test="industrycoName != null" >
        #{industrycoName,jdbcType=VARCHAR},
      </if>
      <if test="industrytype != null" >
        #{industrytype,jdbcType=VARCHAR},
      </if>
      <if test="candate != null" >
        #{candate,jdbcType=TIMESTAMP},
      </if>
      <if test="revdate != null" >
        #{revdate,jdbcType=TIMESTAMP},
      </if>
      <if test="regcapusd != null" >
        #{regcapusd,jdbcType=DECIMAL},
      </if>
      <if test="dom != null" >
        #{dom,jdbcType=VARCHAR},
      </if>
      <if test="oploc != null" >
        #{oploc,jdbcType=VARCHAR},
      </if>
      <if test="cerno != null" >
        #{cerno,jdbcType=VARCHAR},
      </if>
      <if test="qylxdl != null" >
        #{qylxdl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yawei.model.gsyw.ZtdjJbxxZsExample" resultType="java.lang.Integer" >
    select count(*) from TAGSYW.ZTDJ_JBXX_ZS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update TAGSYW.ZTDJ_JBXX_ZS
    <set >
      <if test="record.pripid != null" >
        PRIPID = #{record.pripid,jdbcType=VARCHAR},
      </if>
      <if test="record.regno != null" >
        REGNO = #{record.regno,jdbcType=VARCHAR},
      </if>
      <if test="record.uniscid != null" >
        UNISCID = #{record.uniscid,jdbcType=VARCHAR},
      </if>
      <if test="record.entname != null" >
        ENTNAME = #{record.entname,jdbcType=VARCHAR},
      </if>
      <if test="record.lerep != null" >
        LEREP = #{record.lerep,jdbcType=VARCHAR},
      </if>
      <if test="record.entcat != null" >
        ENTCAT = #{record.entcat,jdbcType=VARCHAR},
      </if>
      <if test="record.regorg != null" >
        REGORG = #{record.regorg,jdbcType=VARCHAR},
      </if>
      <if test="record.localadm != null" >
        LOCALADM = #{record.localadm,jdbcType=VARCHAR},
      </if>
      <if test="record.localorg != null" >
        LOCALORG = #{record.localorg,jdbcType=VARCHAR},
      </if>
      <if test="record.enttype != null" >
        ENTTYPE = #{record.enttype,jdbcType=VARCHAR},
      </if>
      <if test="record.industryphy != null" >
        INDUSTRYPHY = #{record.industryphy,jdbcType=VARCHAR},
      </if>
      <if test="record.industryco != null" >
        INDUSTRYCO = #{record.industryco,jdbcType=VARCHAR},
      </if>
      <if test="record.estdate != null" >
        ESTDATE = #{record.estdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.entstatus != null" >
        ENTSTATUS = #{record.entstatus,jdbcType=DECIMAL},
      </if>
      <if test="record.regcap != null" >
        REGCAP = #{record.regcap,jdbcType=DECIMAL},
      </if>
      <if test="record.sExtTimestamp != null" >
        S_EXT_TIMESTAMP = #{record.sExtTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.entid != null" >
        ENTID = #{record.entid,jdbcType=VARCHAR},
      </if>
      <if test="record.apprdate != null" >
        APPRDATE = #{record.apprdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.opfrom != null" >
        OPFROM = #{record.opfrom,jdbcType=TIMESTAMP},
      </if>
      <if test="record.opto != null" >
        OPTO = #{record.opto,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tel != null" >
        TEL = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.postalcode != null" >
        POSTALCODE = #{record.postalcode,jdbcType=VARCHAR},
      </if>
      <if test="record.apprno != null" >
        APPRNO = #{record.apprno,jdbcType=VARCHAR},
      </if>
      <if test="record.empnum != null" >
        EMPNUM = #{record.empnum,jdbcType=DECIMAL},
      </if>
      <if test="record.entcatName != null" >
        ENTCAT_NAME = #{record.entcatName,jdbcType=VARCHAR},
      </if>
      <if test="record.entstatusName != null" >
        ENTSTATUS_NAME = #{record.entstatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.regorgName != null" >
        REGORG_NAME = #{record.regorgName,jdbcType=VARCHAR},
      </if>
      <if test="record.localorgName != null" >
        LOCALORG_NAME = #{record.localorgName,jdbcType=VARCHAR},
      </if>
      <if test="record.localadmName != null" >
        LOCALADM_NAME = #{record.localadmName,jdbcType=VARCHAR},
      </if>
      <if test="record.enttypeName != null" >
        ENTTYPE_NAME = #{record.enttypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.industryphyName != null" >
        INDUSTRYPHY_NAME = #{record.industryphyName,jdbcType=VARCHAR},
      </if>
      <if test="record.industrycoName != null" >
        INDUSTRYCO_NAME = #{record.industrycoName,jdbcType=VARCHAR},
      </if>
      <if test="record.industrytype != null" >
        INDUSTRYTYPE = #{record.industrytype,jdbcType=VARCHAR},
      </if>
      <if test="record.candate != null" >
        CANDATE = #{record.candate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.revdate != null" >
        REVDATE = #{record.revdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.regcapusd != null" >
        REGCAPUSD = #{record.regcapusd,jdbcType=DECIMAL},
      </if>
      <if test="record.dom != null" >
        DOM = #{record.dom,jdbcType=VARCHAR},
      </if>
      <if test="record.oploc != null" >
        OPLOC = #{record.oploc,jdbcType=VARCHAR},
      </if>
      <if test="record.cerno != null" >
        CERNO = #{record.cerno,jdbcType=VARCHAR},
      </if>
      <if test="record.qylxdl != null" >
        QYLXDL = #{record.qylxdl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update TAGSYW.ZTDJ_JBXX_ZS
    set PRIPID = #{record.pripid,jdbcType=VARCHAR},
      REGNO = #{record.regno,jdbcType=VARCHAR},
      UNISCID = #{record.uniscid,jdbcType=VARCHAR},
      ENTNAME = #{record.entname,jdbcType=VARCHAR},
      LEREP = #{record.lerep,jdbcType=VARCHAR},
      ENTCAT = #{record.entcat,jdbcType=VARCHAR},
      REGORG = #{record.regorg,jdbcType=VARCHAR},
      LOCALADM = #{record.localadm,jdbcType=VARCHAR},
      LOCALORG = #{record.localorg,jdbcType=VARCHAR},
      ENTTYPE = #{record.enttype,jdbcType=VARCHAR},
      INDUSTRYPHY = #{record.industryphy,jdbcType=VARCHAR},
      INDUSTRYCO = #{record.industryco,jdbcType=VARCHAR},
      ESTDATE = #{record.estdate,jdbcType=TIMESTAMP},
      ENTSTATUS = #{record.entstatus,jdbcType=DECIMAL},
      REGCAP = #{record.regcap,jdbcType=DECIMAL},
      S_EXT_TIMESTAMP = #{record.sExtTimestamp,jdbcType=TIMESTAMP},
      ENTID = #{record.entid,jdbcType=VARCHAR},
      APPRDATE = #{record.apprdate,jdbcType=TIMESTAMP},
      OPFROM = #{record.opfrom,jdbcType=TIMESTAMP},
      OPTO = #{record.opto,jdbcType=TIMESTAMP},
      TEL = #{record.tel,jdbcType=VARCHAR},
      POSTALCODE = #{record.postalcode,jdbcType=VARCHAR},
      APPRNO = #{record.apprno,jdbcType=VARCHAR},
      EMPNUM = #{record.empnum,jdbcType=DECIMAL},
      ENTCAT_NAME = #{record.entcatName,jdbcType=VARCHAR},
      ENTSTATUS_NAME = #{record.entstatusName,jdbcType=VARCHAR},
      REGORG_NAME = #{record.regorgName,jdbcType=VARCHAR},
      LOCALORG_NAME = #{record.localorgName,jdbcType=VARCHAR},
      LOCALADM_NAME = #{record.localadmName,jdbcType=VARCHAR},
      ENTTYPE_NAME = #{record.enttypeName,jdbcType=VARCHAR},
      INDUSTRYPHY_NAME = #{record.industryphyName,jdbcType=VARCHAR},
      INDUSTRYCO_NAME = #{record.industrycoName,jdbcType=VARCHAR},
      INDUSTRYTYPE = #{record.industrytype,jdbcType=VARCHAR},
      CANDATE = #{record.candate,jdbcType=TIMESTAMP},
      REVDATE = #{record.revdate,jdbcType=TIMESTAMP},
      REGCAPUSD = #{record.regcapusd,jdbcType=DECIMAL},
      DOM = #{record.dom,jdbcType=VARCHAR},
      OPLOC = #{record.oploc,jdbcType=VARCHAR},
      CERNO = #{record.cerno,jdbcType=VARCHAR},
      QYLXDL = #{record.qylxdl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_   where rownum <= #{page.end} ) where rownum_ > #{page.begin} ]]>
    </if>
  </sql>
  <select id="selectZtzlData" parameterType="map" resultType="java.util.Map" >
	select count(1) qmsl,
	    count(case when to_char(estdate,'yyyy-MM-dd')&lt;=to_char(ADD_MONTHS(sysdate, -12),'yyyy-MM-dd') then 1 else null end) qnsl
	    from ZTDJ_JBXX_ZS 
	    WHERE entstatus = '1'
	          and  to_char(estdate,'yyyy-MM-dd')&lt;=to_char(sysdate,'yyyy-MM-dd')
	    <if test="entcat != null">
	    	and ENTCAT = #{entcat}
	    </if>
  </select>
  <select id="selectCyfbData" parameterType="map" resultType="java.util.Map" >
	select 
     (select item_name from pub_dict_item where dic_type ='INDUSTRYTYPE' and item_value=INDUSTRYTYPE ) as name, 
    count(1) as value from ZTDJ_JBXX_ZS
     WHERE industrytype is not null
           and entstatus = '1'
           and estdate &lt;= sysdate
	    <if test="entcat != null">
	    	and ENTCAT = #{entcat}
	    </if>
	    group by INDUSTRYTYPE 
   	 	order by INDUSTRYTYPE
  </select>
  <select id="selectGqxztslData" parameterType="map" resultType="java.util.Map" >
	select (select organ_name from pub_organ where organ_code=	REGORG) as name, REGORG as code,count(1) as value 
    from ZTDJ_JBXX_ZS 
	WHERE entstatus = '1'
	      and estdate &lt;= sysdate
	    <if test="entcat != null">
	    	and ENTCAT = #{entcat}
	    </if>
		group by REGORG 
		order by count(1) desc
  </select>
  <select id="selectLxfbData" resultType="java.util.Map" >
	select (select item_name from pub_dict_item where dic_type ='ENTCAT' and item_value=ENTCAT ) as name, 
	    count(1) as value 
	from ZTDJ_JBXX_ZS 
	WHERE  entstatus = '1'
	    and estdate &lt;= sysdate
	    group by ENTCAT
	    order by ENTCAT
  </select>
  <select id="selectGmfbData" parameterType="map" resultType="java.util.Map" >
	SELECT 
		CASE 
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 10 THEN 'A10万以下'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 10 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 50  THEN 'B10(含)-50万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 50 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 100  THEN 'C50(含)-100万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 100 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 500  THEN 'D100(含)-500万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 500 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 1000  THEN 'E500(含)-1000万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 1000 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 10000   THEN 'F1000万(含)-1亿'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 10000   THEN 'G1亿(含)以上'
		END AS NAME,COUNT(1) AS NUM
	 
	FROM ZTDJ_JBXX_ZS 
	WHERE enttype not in (select item_value from pub_dict_item where dic_type='ENTTYPE' AND note in ('FGS','HZSFZ','WZFZ','HHFZ','WGDB','GRDZFZ','NZYY','WZHHFZ','WGJY') )
	AND ENTSTATUS= '1'
	<if test="entcat != null">
		and ENTCAT = #{entcat}
	</if>
  AND ESTDATE  &lt;= sysdate
	GROUP BY 
		CASE 
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 10 THEN 'A10万以下'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 10 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 50  THEN 'B10(含)-50万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 50 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 100  THEN 'C50(含)-100万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 100 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 500  THEN 'D100(含)-500万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 500 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 1000  THEN 'E500(含)-1000万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 1000 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 10000   THEN 'F1000万(含)-1亿'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 10000   THEN 'G1亿(含)以上'
		END
	ORDER BY 
		CASE 
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 10 THEN 'A10万以下'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 10 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 50  THEN 'B10(含)-50万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 50 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 100  THEN 'C50(含)-100万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 100 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 500  THEN 'D100(含)-500万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 500 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 1000  THEN 'E500(含)-1000万'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 1000 AND NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &lt; 10000   THEN 'F1000万(含)-1亿'
		  WHEN NVL(case when entcat='6' then regcap/10000
     when entcat='8' then RegCapUSD*6.79
     else regcap
end, 0) &gt;= 10000   THEN 'G1亿(含)以上'
		END
  </select>
  <select id="selectZtzzqsData" parameterType="map" resultType="java.util.Map" >
	select count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(sysdate,'yyyy-mm') then 1 else null end) as month0,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-1),'yyyy-mm') then 1 else null end) as month1,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-2),'yyyy-mm') then 1 else null end) as month2,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-3),'yyyy-mm') then 1 else null end) as month3,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-4),'yyyy-mm') then 1 else null end) as month4,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-5),'yyyy-mm') then 1 else null end) as month5,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-6),'yyyy-mm') then 1 else null end) as month6,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-7),'yyyy-mm') then 1 else null end) as month7,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-8),'yyyy-mm') then 1 else null end) as month8,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-9),'yyyy-mm') then 1 else null end) as month9,
	    count(case when  to_char(estdate,'yyyy-mm') &lt;= to_char(add_months(sysdate,-10),'yyyy-mm') then 1 else null end) as month10
	  from ZTDJ_JBXX_ZS 
		WHERE entstatus = '1'
		      and estdate &lt;= sysdate
		      <if test="entcat != null">
		    	and ENTCAT = #{entcat}
		      </if>
  </select>
  <select id="selectQynlzbData" parameterType="map" resultType="java.util.Map" >
	SELECT CASE WHEN LASTDAY &lt; 5 THEN '5年以下'
    WHEN LASTDAY &gt;= 5 AND LASTDAY &lt; 10 THEN '5-10年'
    WHEN LASTDAY &gt;= 10 AND LASTDAY &lt; 20 THEN '10-20年'
    WHEN LASTDAY &gt;= 20 THEN '20年以上'
    END "name",count(1) "value"
    FROM (SELECT floor((SYSDATE - ESTDATE)/ 365) AS LASTDAY
      FROM ZTDJ_JBXX_ZS       
     WHERE estdate &lt;= sysdate
           and ENTSTATUS = '1'
           <if test="entcat == 'qy'">
		   	and ENTCAT in ('1','2','8')
		   </if>
		   <if test="entcat == 'gt'">
		   	and ENTCAT = '5'
		   </if>
		   <if test="entcat == 'nz'">
		   	and ENTCAT = '6'
		   </if>)
    GROUP BY
    CASE 
    WHEN LASTDAY &lt; 5 THEN '5年以下'
    WHEN LASTDAY &gt;= 5 AND LASTDAY &lt; 10 THEN '5-10年'
    WHEN LASTDAY &gt;= 10 AND LASTDAY &lt; 20 THEN '10-20年'
    WHEN LASTDAY &gt;= 20 THEN '20年以上'
    END 
    ORDER BY
     CASE 
    WHEN LASTDAY &lt; 5 THEN '5年以下'
    WHEN LASTDAY &gt;= 5 AND LASTDAY &lt; 10 THEN '5-10年'
    WHEN LASTDAY &gt;= 10 AND LASTDAY &lt; 20 THEN '10-20年'
    WHEN LASTDAY &gt;= 20 THEN '20年以上'
    END
  </select>
  <select id="selectCsqyhyfxData" parameterType="map" resultType="java.util.Map" >
	select 
     (select item_name from pub_dict_item where dic_type ='INDUSTRYPHY' and item_value=INDUSTRYPHY ) as "name", 
    count(1) as "value" from ZTDJ_JBXX_ZS 
     WHERE entstatus = '1'
           and industryphy is not null
           <if test="type == 'type1'">
           	and ((sysdate-estdate)/365) &lt; 5
           </if>
           <if test="type == 'type2'">
           	and ((sysdate-estdate)/365) >= 5
           	and ((sysdate-estdate)/365) &lt; 10
           </if>
           <if test="type == 'type3'">
           	and ((sysdate-estdate)/365) >= 10
           	and ((sysdate-estdate)/365) &lt; 20
           </if>
           <if test="type == 'type4'">
           	and ((sysdate-estdate)/365) >= 20
           </if>
    group by INDUSTRYPHY 
    order by count(1) desc,INDUSTRYPHY
  </select>
  <select id="selectQyjmbrxbfbData" resultType="java.util.Map" >
	select sex as name,count(*) as value
	from (select  ryxx.sex as sex
		from qydj_ryxx_zs ryxx 
		left join qydj_jbxx_zs jbxx 
		on        ryxx.pripid=jbxx.pripid
		where       (length(ryxx.cerno)=15 or length(ryxx.cerno)=18 )
		and        regexp_like( substr(ryxx.cerno,7,2), '^[[:digit:]]+$') and  regexp_like( substr(ryxx.cerno,7,4), '^[[:digit:]]+$')
		AND RYXX.LEREPSIGN='1'
		and jbxx.entstatus='1' and jbxx.entcat in ('1','2','6') and ryxx.sex is not null and ryxx.sex !=0 and ryxx.sex!=3
		union all
		select jyzxx.sex as sex
		from      gtdj_jyzxx_zs jyzxx
		left join gtdj_jbxx_zs  jbxx 
		on        jyzxx.pripid=jbxx.pripid
		where       (length(jyzxx.cerno)=15 or length(jyzxx.cerno)=18 )
		and       regexp_like( substr(jyzxx.cerno,7,2), '^[[:digit:]]+$') and  regexp_like( substr(jyzxx.cerno,7,4), '^[[:digit:]]+$')
		and      jbxx.status='1' and jyzxx.sex is not null and jyzxx.sex !=0 and jyzxx.sex!=3) 
		group by sex
  </select>
  <select id="selectQyjmbrdqfbData" resultType="java.util.Map" >
	select  (case when regorg = '370902' then '泰山区'
         when regorg = '370903' or regorg = '370911' then '岱岳区'
         when regorg = '370920' or regorg = '370982' then '新泰市'
         when regorg = '370921' then '宁阳县'
         when regorg = '370922' or regorg = '370983' then '肥城市'
         when regorg = '370923' then '东平县'
         else '其他' end) as name,count(*) as value
	from (select substr(ryxx.cerno,0,6) as regorg
	    from qydj_ryxx_zs ryxx 
	    left join qydj_jbxx_zs jbxx 
	    on        ryxx.pripid=jbxx.pripid
	    where       (length(ryxx.cerno)=15 or length(ryxx.cerno)=18 )
      AND RYXX.LEREPSIGN='1'
      and jbxx.entstatus='1' and jbxx.entcat in ('1','2','6') 
      union all
      select substr(jyzxx.cerno,0,6) as regorg
      from      gtdj_jyzxx_zs jyzxx
      left join gtdj_jbxx_zs  jbxx 
      on        jyzxx.pripid=jbxx.pripid
      where       (length(jyzxx.cerno)=15 or length(jyzxx.cerno)=18 )
      and      jbxx.status='1' ) 
      group by (case when regorg = '370902' then '泰山区'
         when regorg = '370903' or regorg = '370911' then '岱岳区'
         when regorg = '370920' or regorg = '370982' then '新泰市'
         when regorg = '370921' then '宁阳县'
         when regorg = '370922' or regorg = '370983' then '肥城市'
         when regorg = '370923' then '东平县'
         else '其他' end)
      order by (case when regorg = '370902' then '泰山区'
         when regorg = '370903' or regorg = '370911' then '岱岳区'
         when regorg = '370920' or regorg = '370982' then '新泰市'
         when regorg = '370921' then '宁阳县'
         when regorg = '370922' or regorg = '370983' then '肥城市'
         when regorg = '370923' then '东平县'
         else '其他' end) desc
  </select>
  <select id="selectQyjnlfbData" resultType="java.util.Map" >
	select  
	 case 
	       when age &lt;30               then  'A30岁以下'
	       when age &gt;= 30 and age &lt;40   then 'B30-40岁'
	       when age &gt;= 40 and age &lt;50   then 'C40-50岁'
	       when age &gt;= 50 and age &lt;60   then 'D50-60岁'
	       when age &gt;= 60              then 'E60岁以上'
	       end name,count(*)as value
	  from
	(select age
	from
	(
	select   decode(length(cerno),'18',to_char(sysdate,'yyyy')-substr(cerno,7,4),15,to_char(sysdate,'yyyy')-substr(cerno,7,2)+1900,-1) as age
	from qydj_ryxx_zs ryxx 
	left join qydj_jbxx_zs jbxx 
	on        ryxx.pripid=jbxx.pripid
	where       (length(ryxx.cerno)=15 or length(ryxx.cerno)=18 )
	and        regexp_like( substr(ryxx.cerno,7,2), '^[[:digit:]]+$') and  regexp_like( substr(ryxx.cerno,7,4), '^[[:digit:]]+$')
	AND RYXX.LEREPSIGN='1'
	and        jbxx.entstatus='1' and jbxx.entcat in ('1','2','6')
	 
	union all
	 
	select  decode(length(cerno),'18',to_char(sysdate,'yyyy')-substr(cerno,7,4),15,to_char(sysdate,'yyyy')-substr(cerno,7,2)+1900,-1) as age
	from      gtdj_jyzxx_zs jyzxx
	left join gtdj_jbxx_zs  jbxx 
	on        jyzxx.pripid=jbxx.pripid
	where       (length(jyzxx.cerno)=15 or length(jyzxx.cerno)=18 )
	and       regexp_like( substr(jyzxx.cerno,7,2), '^[[:digit:]]+$') and  regexp_like( substr(jyzxx.cerno,7,4), '^[[:digit:]]+$')
	and      jbxx.status='1'
	 ))
	    
	  group by
	   case 
	       when age &lt;30               then  'A30岁以下'
	       when age &gt;= 30 and age &lt;40   then 'B30-40岁'
	       when age &gt;= 40 and age &lt;50   then 'C40-50岁'
	       when age &gt;= 50 and age &lt;60   then 'D50-60岁'
	       when age &gt;= 60              then 'E60岁以上'
	       end 
	       order by
	       case 
	       when age &lt;30               then  'A30岁以下'
	       when age &gt;= 30 and age &lt;40   then 'B30-40岁'
	       when age &gt;= 40 and age &lt;50   then 'C40-50岁'
	       when age &gt;= 50 and age &lt;60   then 'D50-60岁'
	       when age &gt;= 60              then 'E60岁以上'
	       end
  </select>
  <select id="selectMbrqyjxbnlzlData" resultType="java.util.Map" >
	select  
	 case 
	       when age &lt; 30               then  '30岁以下'
	       when age &gt; 30 and age &lt; 40   then '30-40岁'
	       when age &gt; 40 and age &lt; 50   then '40-50岁'
	       when age &gt; 50 and age &lt; 60   then '50-60岁'
	       when age &gt; 60              then '60岁以上'
	       end name,sex name1,count(*)as value
	  from
	(select age,sex
	from
	(
	select   decode(length(cerno),'18',to_char(sysdate,'yyyy')-substr(cerno,7,4),15,to_char(sysdate,'yyyy')-substr(cerno,7,2)+1900,-1) as age,sex
	from qydj_ryxx_zs ryxx 
	left join qydj_jbxx_zs jbxx 
	on        ryxx.pripid=jbxx.pripid
	where       (length(ryxx.cerno)=15 or length(ryxx.cerno)=18 )
	and        regexp_like( substr(ryxx.cerno,7,2), '^[[:digit:]]+$') and  regexp_like( substr(ryxx.cerno,7,4), '^[[:digit:]]+$')
	AND RYXX.LEREPSIGN='1'
	and        jbxx.entstatus='1' and jbxx.entcat in ('1','2','6') and ryxx.sex is not null and ryxx.sex !=0 and ryxx.sex!=3
	 
	union all
	 
	select  decode(length(cerno),'18',to_char(sysdate,'yyyy')-substr(cerno,7,4),15,to_char(sysdate,'yyyy')-substr(cerno,7,2)+1900,-1) as age,sex
	from      gtdj_jyzxx_zs jyzxx
	left join gtdj_jbxx_zs  jbxx 
	on        jyzxx.pripid=jbxx.pripid
	where       (length(jyzxx.cerno)=15 or length(jyzxx.cerno)=18 )
	and       regexp_like( substr(jyzxx.cerno,7,2), '^[[:digit:]]+$') and  regexp_like( substr(jyzxx.cerno,7,4), '^[[:digit:]]+$')
	and      jbxx.status='1' and jyzxx.sex is not null and jyzxx.sex !=0 and jyzxx.sex!=3
	 ))
	    
	  group by
	   case 
	       when age &lt; 30               then  '30岁以下'
	       when age &gt; 30 and age &lt; 40   then '30-40岁'
	       when age &gt; 40 and age &lt; 50   then '40-50岁'
	       when age &gt; 50 and age &lt; 60   then '50-60岁'
	       when age &gt; 60              then '60岁以上'
	       end,sex 
	       order by
	       case 
	       when age &lt; 30               then  '30岁以下'
	       when age &gt; 30 and age &lt; 40   then '30-40岁'
	       when age &gt; 40 and age &lt; 50   then '40-50岁'
	       when age &gt; 50 and age &lt; 60   then '50-60岁'
	       when age &gt; 60              then '60岁以上'
	       end,sex
  </select>
  <select id="selectQyjxlfbData" resultType="java.util.Map" >
	select (select t.content from com_dm t where t.type = 'LITEDEG' and t.code = litedeg) as "name",count(*) as "value"
	  from (select  (case when ryxx.litedeg = '01' then '10'
	       when ryxx.litedeg = '02' then '10'
	       when ryxx.litedeg = '03' then '20'
	       when ryxx.litedeg = '04' then '30'
	       when ryxx.litedeg = '05' then '60'
	       when ryxx.litedeg = '06' then '40'
	       when ryxx.litedeg = '07' then '70'
	       when ryxx.litedeg = '08' then '80'
	       else '99' end
	    ) as litedeg
	    from qydj_ryxx_zs ryxx 
	    left join qydj_jbxx_zs jbxx 
	    on        ryxx.pripid=jbxx.pripid
	    where       (length(ryxx.cerno)=15 or length(ryxx.cerno)=18 )
	    and        regexp_like( substr(ryxx.cerno,7,2), '^[[:digit:]]+$') and  regexp_like( substr(ryxx.cerno,7,4), '^[[:digit:]]+$')
	    AND RYXX.LEREPSIGN='1'
	    and jbxx.entstatus='1' and jbxx.entcat in ('1','2','6') and ryxx.litedeg is not null and ryxx.litedeg != 'null'
	    union all
	    select (case when jyzxx.litedeg = '01' then '10'
	       when jyzxx.litedeg = '02' then '10'
	       when jyzxx.litedeg = '03' then '20'
	       when jyzxx.litedeg = '04' then '30'
	       when jyzxx.litedeg = '05' then '60'
	       when jyzxx.litedeg = '06' then '40'
	       when jyzxx.litedeg = '07' then '70'
	       when jyzxx.litedeg = '08' then '80'
	       else '99' end
	    ) as litedeg
	    from      gtdj_jyzxx_zs jyzxx
	    left join gtdj_jbxx_zs  jbxx 
	    on        jyzxx.pripid=jbxx.pripid
	    where       (length(jyzxx.cerno)=15 or length(jyzxx.cerno)=18 )
	    and       regexp_like( substr(jyzxx.cerno,7,2), '^[[:digit:]]+$') and  regexp_like( substr(jyzxx.cerno,7,4), '^[[:digit:]]+$')
	    and      jbxx.status='1' and jyzxx.litedeg is not null and jyzxx.litedeg != 'null') 
	    group by litedeg order by litedeg asc
  </select>
  <select id="selectCsqyzzfxData" parameterType="map" resultType="java.util.Map" >
  	select 
    count(case when lastday &lt;5 then 1 else null end) AS A,
    count(case when lastday &gt;=5 and lastday &lt;=10 then 1 else null end) AS B,
    count(case when lastday &gt;=10 and lastday &lt;=20 then 1 else null end) AS C,
    count(case when lastday &gt;=20 then 1 else null end) AS D 
    from (SELECT floor((to_date(#{year}||'-'||to_char(SYSDATE,'MM-DD'),'YYYY-MM-DD') - ESTDATE)/ 365) AS LASTDAY
      FROM ZTDJ_JBXX_ZS       
     WHERE to_char(estdate,'YYYY-MM-DD') &lt;= (#{year}||'-'||to_char(SYSDATE,'MM-DD'))
           and ENTSTATUS = '1')
  </select>
  <select id="selectTzjephData" parameterType="map" resultType="java.util.Map" >
  	SELECT SUM(NVL(SUBCONAM,0)) AS VALUE , 
       SUM(NVL(SUBCONAM,0))/COUNT(1) AS AVGVALUE,
       SHENG AS CODE,
       SHENG_NAME AS NAME
    FROM
    (
    SELECT 
           SUBCONAM,
           SUBSTR(NVL(CERNO,BLICNO),0,2)||'0000' AS SHENG,
           (SELECT SHORT_NAME FROM PUB_CANT PC WHERE CANT_TYPE='1' AND CANT_CODE=SUBSTR(NVL(CERNO,BLICNO),0,2)||'0000') AS SHENG_NAME,
           SUBSTR(NVL(CERNO,BLICNO),0,4)||'00' SHI,
           (SELECT SHORT_NAME FROM PUB_CANT PC WHERE CANT_TYPE='2' AND CANT_CODE=SUBSTR(NVL(CERNO,BLICNO),0,4)||'00') AS SHI_NAME,
           SUBSTR(NVL(CERNO,BLICNO),0,6) XIAN,
           (SELECT SHORT_NAME FROM PUB_CANT PC WHERE CANT_TYPE='3' AND CANT_CODE=SUBSTR(NVL(CERNO,BLICNO),0,6)) AS XIAN_NAME
      FROM QYDJ_JBXX_ZS QY, QYDJ_CZXX_ZS CZ
     WHERE QY.PRIPID=CZ.PRIPID 
       AND QY.ENTCAT IN ('1','2')
       AND SUBSTR(NVL(CERNO,BLICNO),0,4)!='3709' 
       AND CERNO IS NOT NULL
          AND TO_CHAR(QY.ESTDATE,'YYYY-MM-DD') &lt;= to_char(sysdate,'YYYY-MM-DD')
        AND QY.ENTSTATUS= '1'
        AND QY.REGORG LIKE '3709%')
      WHERE SHENG_NAME IS NOT NULL
      GROUP BY  
       SHENG,
       SHENG_NAME
    ORDER BY SUM(NVL(SUBCONAM,0)) DESC
  </select>
  <select id="selectTzhyfxData" parameterType="map" resultType="java.util.Map" >
  	select 
   	(select item_name from pub_dict_item where dic_type ='INDUSTRYPHY' and item_value=INDUSTRYPHY ) as name, 
    SUM(NVL(SUBCONAM,0)) AS VALUE from (
    SELECT 
           SUBCONAM,
           qy.INDUSTRYPHY
      FROM QYDJ_JBXX_ZS QY, QYDJ_CZXX_ZS CZ
     WHERE QY.PRIPID=CZ.PRIPID 
       AND QY.ENTCAT IN ('1','2')
       AND SUBSTR(NVL(CERNO,BLICNO),0,4)!='3709' 
       AND CERNO IS NOT NULL
          AND TO_CHAR(QY.ESTDATE,'YYYY-MM-DD') &lt;= to_char(sysdate,'YYYY-MM-DD')
        AND QY.ENTSTATUS= '1'
        AND QY.REGORG LIKE '3709%'
    ) 
    group by INDUSTRYPHY 
    order by VALUE DESC
  </select>
  <select id="selectQmztfzqsSlData" resultType="java.util.Map" >
  	select 
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-10)),-1, 1 ,0,1,0)),0) value0 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-9)),-1, 1 ,0,1,0)),0) value1 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-8)),-1, 1 ,0,1,0)),0) value2 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-7)),-1, 1 ,0,1,0)),0) value3 , 
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-6)),-1, 1 ,0,1,0)),0) value4 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-5)),-1, 1 ,0,1,0)),0) value5 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-4)),-1, 1 ,0,1,0)),0) value6 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-3)),-1, 1 ,0,1,0)),0) value7 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-2)),-1, 1 ,0,1,0)),0) value8 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-1)),-1, 1 ,0,1,0)),0) value9 , 
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy'))),-1, 1 ,0,1,0)),0) value10      
       FROM ZTDJ_JBXX_ZS 
       WHERE entstatus = '1'
  </select>
  <select id="selectQmztfzqsZjData" resultType="java.util.Map" >
  	select 
      nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-10)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value0 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-9)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value1 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-8)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value2 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-7)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value3 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-6)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value4 , 
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-5)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value5,
        nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-4)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value6 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-3)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value7 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-2)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value8 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-1)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value9 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy'))),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value10      
       FROM ZTDJ_JBXX_ZS 
       WHERE entstatus = '1'
  </select>
  <select id="selectZttbzzData" parameterType="map" resultType="java.util.Map" >
  	select 
	  (select organ_name from pub_organ where organ_code=	REGORG) as name, 
	  count(*) as value
	 from ZTDJ_JBXX_ZS 
	     WHERE entstatus = '1'
	           and to_char(estdate,'yyyy')=to_char(sysdate,'yyyy') 
	    	   <if test="entcat == 'qy'">
			   	and ENTCAT in ('1','2','8')
			   </if>
			   <if test="entcat == 'gt'">
			   	and ENTCAT = '5'
			   </if>
			   <if test="entcat == 'nz'">
			   	and ENTCAT = '6'
			   </if>
	    group by REGORG 
	    order by count(*) desc
  </select>
  <select id="selectZtlbfzfxData" parameterType="map" resultType="java.util.Map" >
  	select 
	  count(*) as value
	 from ZTDJ_JBXX_ZS 
	     WHERE entstatus = '1'
	           and estdate &lt;= sysdate
	    	   <if test="entcat == 'qy'">
			   	and ENTCAT in ('1','2','8')
			   </if>
			   <if test="entcat == 'gt'">
			   	and ENTCAT = '5'
			   </if>
			   <if test="entcat == 'nz'">
			   	and ENTCAT = '6'
			   </if>
  </select>
  <select id="selectZtlbfzfxTbData" parameterType="map" resultType="java.util.Map" >
  	select 
	  count(*) as value
	 from ZTDJ_JBXX_ZS 
	     WHERE entstatus = '1'
	           and estdate &lt;= ADD_MONTHS(sysdate,-12) 
	    	   <if test="entcat == 'qy'">
			   	and ENTCAT in ('1','2','8')
			   </if>
			   <if test="entcat == 'gt'">
			   	and ENTCAT = '5'
			   </if>
			   <if test="entcat == 'nz'">
			   	and ENTCAT = '6'
			   </if>
  </select>
  <select id="selectHytbzzlData" resultType="java.util.Map" >
  	select 
   	(select item_name from pub_dict_item where dic_type ='INDUSTRYPHY' and item_value=INDUSTRYPHY ) as name, 
    count(1) as value from ZTDJ_JBXX_ZS 
     WHERE  entstatus = '1'
            and industryphy is not null
            and estdate &lt;= sysdate 
    group by INDUSTRYPHY 
    order by count(1) desc,INDUSTRYPHY
  </select>
  <select id="selectHytbzzlTbData" resultType="java.util.Map" >
  	select 
   	(select item_name from pub_dict_item where dic_type ='INDUSTRYPHY' and item_value=INDUSTRYPHY ) as name, 
    count(1) as value from ZTDJ_JBXX_ZS 
     WHERE  entstatus = '1'
            and industryphy is not null
            and estdate &lt;= ADD_MONTHS(sysdate,-12) 
    group by INDUSTRYPHY 
    order by count(1) desc,INDUSTRYPHY
  </select>
  <select id="selectScztzsfxSlData" parameterType="map" resultType="java.util.Map" >
  	select 
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-4)),-1, 1 ,0,1,0)),0) value0 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-3)),-1, 1 ,0,1,0)),0) value1 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-2)),-1, 1 ,0,1,0)),0) value2 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-1)),-1, 1 ,0,1,0)),0) value3 , 
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy'))),-1, 1 ,0,1,0)),0) value4      
       FROM ZTDJ_JBXX_ZS 
       WHERE entstatus = '1'
      		<if test="entcat == 'qy'">
				and ENTCAT in ('1','2','8')
			</if>
			<if test="entcat == 'gt'">
			   	and ENTCAT = '5'
			</if>
			<if test="entcat == 'nz'">
			   	and ENTCAT = '6'
			</if>
  </select>
  <select id="selectScztzsfxZjData" parameterType="map" resultType="java.util.Map" >
  	select 
        nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-4)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value0 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-3)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value1 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-2)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value2 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy')-1)),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value3 ,
       nvl(SUM(DECODE(sign (to_char(estdate,'yyyy')-(to_char(sysdate,'yyyy'))),-1, (CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END) ,0,(CASE ENTCAT
            WHEN '6' THEN  REGCAP/10000
            WHEN '8' THEN  REGCAPUSD*6.79
            ELSE REGCAP
            END),0)),0) value4      
       FROM ZTDJ_JBXX_ZS 
       WHERE entstatus = '1'
       		<if test="entcat == 'qy'">
				and ENTCAT in ('1','2','8')
			</if>
			<if test="entcat == 'gt'">
			   	and ENTCAT = '5'
			</if>
			<if test="entcat == 'nz'">
			   	and ENTCAT = '6'
			</if>
  </select>
  <select id="selectGssztslData" parameterType="map" resultType="java.util.Map" >
  	select (select organ.organ_name from pub_organ organ where organ.organ_code = t.localadm)||t.localadm as "name",
  			count(1) as "value" 
	from ZTDJ_JBXX_ZS t 
	where 
	       to_char(t.estdate,'yyyy-mm-dd') >= #{startTime} 
	       and to_char(t.estdate,'yyyy-mm-dd') &lt;= #{endTime}
	       and exists (select 1 from pub_organ where organ_code = t.localadm)
	group by t.localadm
  </select>
  <select id="selectTzjephjwData" resultType="java.util.Map" >
  	SELECT (SELECT ITEM_NAME
	      FROM PUB_DICT_ITEM DIC
	      WHERE QY.COUNTRY = DIC.ITEM_VALUE(+)
	      AND DIC.DIC_TYPE = 'COUNTRY') AS NAME,
	      QY.COUNTRY AS CODE,
	      SUM(NVL(FORREGCAPUSD, 0)) AS VALUE
	    FROM  QYDJ_JBXX_ZS QY
	    WHERE ENTTYPE!='7200'
	        AND QY.ENTCAT = '8'
	        AND TO_CHAR(QY.ESTDATE,'YYYY-MM-DD') &lt;= TO_CHAR(sysdate,'YYYY-MM-DD')
	        AND QY.ENTSTATUS= '1'
	        AND QY.REGORG LIKE '3709%'
	        AND QY.COUNTRY != '999'
	        AND QY.COUNTRY != '156'
	        AND EXISTS (SELECT 1 FROM PUB_DICT_ITEM WHERE ITEM_VALUE=QY.COUNTRY AND DIC_TYPE='COUNTRY')
	  GROUP BY QY.COUNTRY
	  ORDER BY  SUM(NVL(FORREGCAPUSD, 0)) DESC
  </select>
</mapper>